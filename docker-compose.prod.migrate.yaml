x-aws-vpc: "vpc-0a7d93c0e1c5118ec"
x-aws-cluster: "ecs-cluster"
x-aws-loadbalancer: "ecs-alb" # load balancer "ecs-alb" is of type application, project require a network
x-aws-logs_retention: 7
# x-aws-cloudformation:
#   Resources:
#     LoadBalancer:
#       Properties:
#         #Scheme: internal
#         Subnets:
#         - subnet-FILL_ME
#         - subnet-FILL_ME
#         # Certificates:
#         #   - CertificateArn: "arn:aws:acm:certificate/123abc"
#         # Protocol: HTTPS
#     FrontendService:
#       Properties:
#         NetworkConfiguration:
#           AwsvpcConfiguration:
#             Subnets:
#             - subnet-FILL_ME
#             - subnet-FILL_ME

services:
  frontend:
    image: ${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com/example-app-frontend:latest
    ports:
      - target: 3000
        x-aws-protocol: http
  backend:
    image: ${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com/example-app-backend:latest
    logging:
      options:
        mode: non-blocking # Default is blocking
        max-buffer-size: 5m # Default is 1min
    # cap_add:
    #   - SYS_PTRACE
    # deploy:
    #   replicas: 2
    #   # resources:
    #   #   limits:
    #   #     memory: 2Gb
    #   #     cpus: '0.5'
    #   x-aws-autoscaling:
    #     min: 1
    #     max: 2 #required
    #     cpu: 75
    # This enables task level IAM role for the service
    # x-aws-role:
    #     Version: '2012-10-17'
    #     Statement:
    #     - Effect: Allow
    #       Action: sqs:*
    #       Resource: FILL_ME_ARN_OF_SQS
#secrets:
#  db-password:
#    name: ${ARN_SECRETS_MANAGER}
#    external: true
#Above overrides mysecrets
# $ cat creds.json
# {
#   "username":"Some secret name",
#   "password":"some secret credential"
# }

# Now create it using following
# $ docker secret create pullcred /path/to/creds.json --context GIVE_ECS_CONTEXT_NAME
# arn:aws:secretsmanager:eu-west-3:xxx:secret:pullcred
