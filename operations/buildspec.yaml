version: 0.2
phases:
  install:
    runtime-versions:
      python: 3.8
    commands:
      - echo "Performing manual install of compose cli"
      - curl -L -o docker-linux-amd64.tar.gz https://github.com/docker/compose-cli/releases/download/v1.0.10/docker-linux-amd64.tar.gz
      - tar xzf docker-linux-amd64.tar.gz
      - chmod +x docker/docker
      - ls -ltr
      - docker/docker compose --help
      - which docker
      - ln -s $(which docker) /usr/local/bin/com.docker.cli
  pre_build:
    commands:
      - echo "Retrieve AWS credentials"
      #- docker login --username $DOCKERHUB_USERNAME --password $DOCKERHUB_PASSWORD
      - STS_RESPONSE=$(curl 169.254.170.2$AWS_CONTAINER_CREDENTIALS_RELATIVE_URI)
      - export AWS_ACCESS_KEY_ID=$(echo $STS_RESPONSE | jq .AccessKeyId | tr -d \")
      - export AWS_SECRET_ACCESS_KEY=$(echo $STS_RESPONSE | jq .SecretAccessKey | tr -d \")
      - export AWS_SESSION_TOKEN=$(echo $STS_RESPONSE | jq .Token | tr -d \")
      - aws ecr get-login-password --region ${REGION} | docker login --username AWS --password-stdin ${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com

  build:
    commands:
      - echo Build started on `date`
      - docker/docker compose build
      - echo "Tagging Docker image for Docker Hub"
      - docker images
      #- docker tag src_backend:latest ${DOCKERHUB_USERNAME}/docker-compose-ecs-sample_backend:${CODEBUILD_RESOLVED_SOURCE_VERSION}
      #- docker tag src_frontend:latest ${DOCKERHUB_USERNAME}/docker-compose-ecs-sample_frontend:${CODEBUILD_RESOLVED_SOURCE_VERSION}
      #- docker push ${DOCKERHUB_USERNAME}/docker-compose-ecs-sample_backend:${CODEBUILD_RESOLVED_SOURCE_VERSION}
      #- docker push ${DOCKERHUB_USERNAME}/docker-compose-ecs-sample_frontend:${CODEBUILD_RESOLVED_SOURCE_VERSION}
      - docker tag src_backend ${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com/example-app-backend:${CODEBUILD_RESOLVED_SOURCE_VERSION}
      - docker tag src_frontend ${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com/example-app-frontend:${CODEBUILD_RESOLVED_SOURCE_VERSION}
      - echo "Push images to ECR"
      - docker push ${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com/example-app-backend:${CODEBUILD_RESOLVED_SOURCE_VERSION}
      - docker push ${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com/example-app-frontend:${CODEBUILD_RESOLVED_SOURCE_VERSION}

  post_build:
    commands:
      - echo "build successful"
